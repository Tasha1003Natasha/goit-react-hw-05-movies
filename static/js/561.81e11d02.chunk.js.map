{"version":3,"file":"static/js/561.81e11d02.chunk.js","mappings":"+LACA,EAAuB,4BAAvB,EAA0D,4BAA1D,EAA6F,4BAA7F,EAAuI,mCAAvI,EAAiL,4B,SCGpKA,EAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,GACCA,EAAOK,KAAI,SAAAC,GAAO,OAChB,eAAqBH,UAAWC,EAAhC,UACE,UAAC,KAAD,CACEG,MAAO,CAAEC,KAAMP,GACfQ,GAAE,kBAAaH,EAAQI,IACvBP,UAAWC,EAHb,WAKE,cAAGD,UAAWC,EAAd,SACGE,EAAQK,OAASL,EAAQM,MAAQN,EAAQO,kBAE5C,gBACEC,MAAM,MACNC,IACET,EAAQU,YAAR,yCACsCV,EAAQU,aAD9C,6FAIFC,IAAKX,EAAQK,MACbR,UAAWC,QAjBRE,EAAQI,W,iMCRrBQ,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,gCAOfC,OAAQL,IAGGM,EAAW,mCAAG,sGACFJ,EAAgBK,IAAI,wBADlB,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAIXC,EAAiB,mCAAG,WAAMC,GAAN,yFAERR,EAAgBK,IAAI,gBAAiB,CAC1DF,OAAQ,CAAEK,MAAAA,KAHmB,uBAEvBF,EAFuB,EAEvBA,KAFuB,kBAKxBA,GALwB,2CAAH,sDAQjBG,EAAe,mCAAG,WAAMnB,GAAN,yFACNU,EAAgBK,IAAhB,gBAA6Bf,IADvB,uBACrBgB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAe,mCAAG,WAAMpB,GAAN,yFAENU,EAAgBK,IAAhB,iBAA8Bf,EAA9B,aAFM,uBAErBgB,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMfK,EAAiB,mCAAG,WAAMrB,GAAN,yFACRU,EAAgBK,IAAhB,mBAChBf,EADgB,aADQ,uBACvBgB,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,uD,sHCC9B,UAhCiB,WACf,OAAoCM,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,mCAAG,sGAEdF,GAAW,GAFG,UAGYd,EAAAA,EAAAA,MAHZ,gBAGNiB,EAHM,EAGNA,QACRP,EAAcO,GAJA,gDAMdL,EAAS,kCANK,yBAQdE,GAAW,GARG,4EAAH,qDAWfE,MACC,KAID,gCACGH,GAAW,cACXF,IAAS,yBAAMA,KAChB,eAAIhC,UAAWC,EAAAA,EAAAA,MAAf,6BACA,SAAC,IAAD,CAAeJ,OAAQiC,S,kBC/B7B,KAAgB,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sBAAsB,IAAM,mBAAmB,SAAW,wBAAwB,KAAO,oBAAoB,KAAO","sources":["webpack://react-homework-template/./src/components/Moviesgallery/Moviesgallery.module.css?4358","components/Moviesgallery/Moviesgallery.js","service/service.js","views/HomeView.js","webpack://react-homework-template/./src/views/views.module.css?3bec"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Moviesgallery_list__+7zJB\",\"item\":\"Moviesgallery_item__FMc97\",\"link\":\"Moviesgallery_link__2EC-B\",\"img_gallary\":\"Moviesgallery_img_gallary__xAHYZ\",\"name\":\"Moviesgallery_name__VIC35\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from '../Moviesgallery/Moviesgallery.module.css';\n\nexport const Moviesgallery = ({ movies }) => {\n  const location = useLocation();\n\n  // console.log({ movies });\n  return (\n    <ul className={styles.list}>\n      {movies &&\n        movies.map(element => (\n          <li key={element.id} className={styles.item}>\n            <Link\n              state={{ from: location }}\n              to={`/movies/${element.id}`}\n              className={styles.link}\n            >\n              <p className={styles.name}>\n                {element.title || element.name || element.original_title}\n              </p>\n              <img\n                width=\"400\"\n                src={\n                  element.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${element.poster_path}`\n                    : `https://s1.hostingkartinok.com/uploads/images/2022/07/40ceaea2e22257d2a139ca5a0c0b8ba9.jpg`\n                }\n                alt={element.title}\n                className={styles.img_gallary}\n              />\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nMoviesgallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst KEY_API = '7a4cd4317772102a9b88ef6a54b71590';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst defaultParams = {\n  api_key: KEY_API,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const fetchMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/week');\n  return data;\n};\nexport const fetchSearchMovies = async query => {\n  // console.log(query);\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const fetchMoviesById = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchCastMovies = async id => {\n  // console.log(id);\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovies } from 'service/service';\nimport { Moviesgallery } from 'components/Moviesgallery/Moviesgallery';\nimport styles from '../views/views.module.css';\n\nconst HomeView = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // fetchMovies().then(({ results }) => setMoviesList(results));\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        const { results } = await fetchMovies();\n        setMoviesList(results);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  // console.log(moviesList);\n  return (\n    <>\n      {loading && 'Loading ...'}\n      {error && <div>{error}</div>}\n      <h1 className={styles.title}>Trending today</h1>\n      <Moviesgallery movies={moviesList} />\n    </>\n  );\n};\n\nexport default HomeView;\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"views_menu__E7izE\",\"title\":\"views_title__9XD4P\",\"button\":\"views_button__UTffQ\",\"img\":\"views_img__VUAAM\",\"list_img\":\"views_list_img__BOzMI\",\"text\":\"views_text__368te\",\"link\":\"views_link__o50X0\"};"],"names":["Moviesgallery","movies","location","useLocation","className","styles","map","element","state","from","to","id","title","name","original_title","width","src","poster_path","alt","defaultParams","api_key","moviesApiClient","axios","baseURL","params","fetchMovies","get","data","fetchSearchMovies","query","fetchMoviesById","fetchCastMovies","fetchRewiesMovies","useState","moviesList","setMoviesList","error","setError","loading","setLoading","useEffect","getMovies","results"],"sourceRoot":""}