{"version":3,"file":"static/js/267.a4ebbe68.chunk.js","mappings":"4PACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAiF,sBAAjF,EAA+G,uB,SCElGA,EAAS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,4BACE,cAAGC,UAAWC,EAAd,SAA4BH,KAC5B,cAAGE,UAAWC,EAAd,SAA6BF,QCCtBG,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAGfF,GAAW,GAHI,UAIWG,EAAAA,EAAAA,IAAkBR,GAJ7B,gBAIPS,EAJO,EAIPA,QAERV,EAAWU,GANI,gDAQfN,EAAS,kCARM,yBAUfE,GAAW,GAVI,4EAAH,qDAahBE,MACC,CAACP,KAGF,gCACGI,GAAW,aAEJ,OAAPN,QAAO,IAAPA,GAAAA,EAASY,QACR,eAAIhB,UAAWC,EAAf,SACGG,EAAQa,KAAI,SAAAC,GACX,OACE,yBACE,SAACrB,EAAD,CACEC,OAAQoB,EAAQpB,OAChBC,QAASmB,EAAQnB,QACjBC,UAAWC,KAJNiB,EAAQC,UAWvB,oEAEDX,IAAS,yBAAMA,S,iMCjDhBY,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,gCAOfC,OAAQL,IAGGM,EAAW,mCAAG,sGACFJ,EAAgBK,IAAI,wBADlB,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAIXC,EAAiB,mCAAG,WAAMC,GAAN,yFAERR,EAAgBK,IAAI,gBAAiB,CAC1DF,OAAQ,CAAEK,MAAAA,KAHmB,uBAEvBF,EAFuB,EAEvBA,KAFuB,kBAKxBA,GALwB,2CAAH,sDAQjBG,EAAe,mCAAG,WAAMZ,GAAN,yFACNG,EAAgBK,IAAhB,gBAA6BR,IADvB,uBACrBS,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAe,mCAAG,WAAMb,GAAN,yFAENG,EAAgBK,IAAhB,iBAA8BR,EAA9B,aAFM,uBAErBS,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMfd,EAAiB,mCAAG,WAAMK,GAAN,yFACRG,EAAgBK,IAAhB,mBAChBR,EADgB,aADQ,uBACvBS,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Review/Review.js","components/Reviews/Reviews.js","service/service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"text\":\"Reviews_text__EqLvx\",\"title\":\"Reviews_title__t265C\"};","import PropTypes from 'prop-types';\nimport styles from '../Reviews/Reviews.module.css';\n\nexport const Review = ({ author, content }) => {\n  return (\n    <div>\n      <b className={styles.text}>{author}</b>\n      <p className={styles.title}>{content}</p>\n    </div>\n  );\n};\n\nReview.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import { fetchRewiesMovies } from 'service/service';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Review } from 'components/Review/Review';\nimport styles from '../Reviews/Reviews.module.css';\n\n// import PropTypes from 'prop-types';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  // console.log(movieId);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      // fetchRewiesMovies(movieId).then(({ results }) => setReviews(results));\n      try {\n        setLoading(true);\n        const { results } = await fetchRewiesMovies(movieId);\n        // console.log(results);\n        setReviews(results);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && 'Loading...'}\n\n      {reviews?.length ? (\n        <ul className={styles.list}>\n          {reviews.map(element => {\n            return (\n              <li key={element.id}>\n                <Review\n                  author={element.author}\n                  content={element.content}\n                  className={styles.item}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n      {error && <div>{error}</div>}\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst KEY_API = '7a4cd4317772102a9b88ef6a54b71590';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst defaultParams = {\n  api_key: KEY_API,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const fetchMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/week');\n  return data;\n};\nexport const fetchSearchMovies = async query => {\n  // console.log(query);\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const fetchMoviesById = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchCastMovies = async id => {\n  // console.log(id);\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["Review","author","content","className","styles","Reviews","useState","reviews","setReviews","movieId","useParams","error","setError","loading","setLoading","useEffect","getReviews","fetchRewiesMovies","results","length","map","element","id","defaultParams","api_key","moviesApiClient","axios","baseURL","params","fetchMovies","get","data","fetchSearchMovies","query","fetchMoviesById","fetchCastMovies"],"sourceRoot":""}